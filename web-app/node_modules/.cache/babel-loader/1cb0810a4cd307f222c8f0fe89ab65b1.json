{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kasintha Kalhara\\\\Desktop\\\\New folder\\\\New folder\\\\web-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport Header from \"./components/nav/Header\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport UserContext from \"./context/userContext\";\nimport Navbar from \"./components/nav/Navbar\";\nimport constants from \"./constants/constants\";\nimport Home from \"./pages/Home\";\nimport Dashboard from \"./pages/Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined\n  });\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n\n      const tokenRes = await Axios.post(constants.backend_url + \"/users/tokenIsValid\", null, {\n        headers: {\n          \"x-auth-token\": token\n        }\n      });\n      console.log(tokenRes.data);\n\n      if (tokenRes.data) {\n        const userRes = await Axios.get(constants.backend_url + \"/users/\", {\n          headers: {\n            \"x-auth-token\": token\n          }\n        });\n        setUserData({\n          token,\n          user: userRes.data\n        });\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n        value: {\n          userData,\n          setUserData\n        },\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/dashboard\",\n              component: Dashboard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/register\",\n              component: Register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              component: Login\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"kBdZ41MIyrwc6QRSBnYASrPRV+8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Kasintha Kalhara/Desktop/New folder/New folder/web-app/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Switch","Route","Axios","Header","Login","Register","UserContext","Navbar","constants","Home","Dashboard","App","userData","setUserData","token","undefined","user","checkLoggedIn","localStorage","getItem","setItem","tokenRes","post","backend_url","headers","console","log","data","userRes","get"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;;AAIA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC;AACvCiB,IAAAA,KAAK,EAAEC,SADgC;AAEvCC,IAAAA,IAAI,EAAED;AAFiC,GAAD,CAAxC;AAKAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,aAAa,GAAG,YAAY;AAChC,UAAIH,KAAK,GAAGI,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAZ;;AACA,UAAIL,KAAK,KAAK,IAAd,EAAoB;AAClBI,QAAAA,YAAY,CAACE,OAAb,CAAqB,YAArB,EAAmC,EAAnC;AACAN,QAAAA,KAAK,GAAG,EAAR;AACD;;AAED,YAAMO,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAN,CACrBd,SAAS,CAACe,WAAV,GAAsB,qBADD,EAErB,IAFqB,EAGrB;AAAEC,QAAAA,OAAO,EAAE;AAAE,0BAAgBV;AAAlB;AAAX,OAHqB,CAAvB;AAKAW,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,IAArB;;AACA,UAAIN,QAAQ,CAACM,IAAb,EAAmB;AACjB,cAAMC,OAAO,GAAG,MAAM1B,KAAK,CAAC2B,GAAN,CAAUrB,SAAS,CAACe,WAAV,GAAsB,SAAhC,EAA2C;AAC/DC,UAAAA,OAAO,EAAE;AAAE,4BAAgBV;AAAlB;AADsD,SAA3C,CAAtB;AAGAD,QAAAA,WAAW,CAAC;AACVC,UAAAA,KADU;AAEVE,UAAAA,IAAI,EAAEY,OAAO,CAACD;AAFJ,SAAD,CAAX;AAID;AACF,KAtBD;;AAwBAV,IAAAA,aAAa;AACd,GA1BQ,EA0BN,EA1BM,CAAT;AA4BA,sBACE;AAAA,2BACE,QAAC,aAAD;AAAA,6BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEL,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,SAA7B;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE,QAAC,MAAD;AAAA,oCAEE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,YAAlB;AAA+B,cAAA,SAAS,EAAEH;AAA1C;AAAA;AAAA;AAAA;AAAA,oBAFF,eAIE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,WAAZ;AAAwB,cAAA,SAAS,EAAEL;AAAnC;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,GAAZ;AAAgB,cAAA,SAAS,EAAED;AAA3B;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmBD;;GArDuBO,G;;KAAAA,G","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport Header from \"./components/nav/Header\";\n\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport UserContext from \"./context/userContext\";\nimport Navbar from \"./components/nav/Navbar\";\n\nimport constants from \"./constants/constants\"\nimport Home from \"./pages/Home\";\nimport Dashboard from \"./pages/Dashboard\";\n\n\n\nexport default function App() {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n  });\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n\n      const tokenRes = await Axios.post(\n        constants.backend_url+\"/users/tokenIsValid\",\n        null,\n        { headers: { \"x-auth-token\": token } }\n      );\n      console.log(tokenRes.data);\n      if (tokenRes.data) {\n        const userRes = await Axios.get(constants.backend_url+\"/users/\", {\n          headers: { \"x-auth-token\": token },\n        });\n        setUserData({\n          token,\n          user: userRes.data,\n        });\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n\n  return (\n    <>\n      <BrowserRouter>\n        <UserContext.Provider value={{ userData, setUserData }}>\n          <Navbar />\n          <div className=\"container\">\n            <Switch>\n              \n              <Route exact path=\"/dashboard\" component={Dashboard} />\n              \n              <Route path=\"/register\" component={Register} />\n              <Route path=\"/\" component={Login} />\n        \n            </Switch>\n          </div>\n        </UserContext.Provider>\n      </BrowserRouter>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}