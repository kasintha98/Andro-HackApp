{"version":3,"sources":["context/userContext.js","components/auth/AuthOptions.js","components/misc/ErrorNotice.js","images/cal.png","constants/constants.js","components/auth/Login.js","components/auth/Register.js","components/nav/Navbar.js","pages/Dashboard.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["createContext","AuthOptions","useContext","userContext","userData","setUserData","history","useHistory","className","user","class","onClick","token","undefined","localStorage","setItem","push","style","borderRadius","ErrorNotice","props","message","clearError","constants","backend_url","Login","useState","email","setEmail","password","setPassword","error","setError","UserContext","submit","e","a","preventDefault","loginUser","Axios","post","loginRes","data","response","msg","marginTop","backgroundColor","src","Cal","alt","height","onSubmit","htmlFor","type","id","onChange","target","value","Register","passwordCheck","setPasswordCheck","displayName","setDisplayName","newUser","aria-describedby","navbar","Navbar","collapseOnSelect","expand","bg","variant","Container","fluid","to","Toggle","aria-controls","Collapse","Nav","Link","eventKey","Component","Dashboard","state","App","useEffect","getItem","headers","tokenRes","console","log","get","userRes","checkLoggedIn","Provider","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3efab5ec.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport default createContext(null);","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport userContext from \"../../context/userContext\";\r\n\r\nexport default function AuthOptions() {\r\n  const { userData, setUserData } = useContext(userContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const register = () => history.push(\"/register\");\r\n  const login = () => history.push(\"/login\");\r\n  const example = () => history.push(\"/example\");\r\n  const logout = () => {\r\n    setUserData({\r\n      token: undefined,\r\n      user: undefined,\r\n    });\r\n    localStorage.setItem(\"auth-token\", \"\");\r\n    localStorage.setItem(\"User_id\", \"\");\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <nav className=\"auth-options\">\r\n      {userData.user ? (\r\n        <>\r\n          <button\r\n            class=\"btn btn-outline-secondary mx-2\"\r\n            onClick={logout}\r\n            style={{ borderRadius: \"4rem\" }}\r\n          >\r\n            Log out\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <button\r\n            class=\"btn btn-outline-secondary mx-2\"\r\n            onClick={register}\r\n            style={{ borderRadius: \"4rem\" }}\r\n          >\r\n            Sign Up\r\n          </button>\r\n          <button\r\n            class=\"btn btn-outline-secondary mx-2\"\r\n            onClick={login}\r\n            style={{ borderRadius: \"4rem\" }}\r\n          >\r\n            Login\r\n          </button>\r\n        </>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ErrorNotice(props) {\r\n  return (\r\n    <div className=\"error-notice\">\r\n      <span>{props.message}</span>\r\n      <button onClick={props.clearError}>X</button>\r\n    </div>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/cal.1eb4d6f8.png\";","const constants = {\r\n  backend_url: \"https://hackathonback.herokuapp.com\",\r\n};\r\n\r\nexport default constants;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport Axios from \"axios\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\nimport Cal from \"../../images/cal.png\";\r\nimport constants from \"../../constants/constants\";\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  const { setUserData } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const loginUser = { email, password };\r\n      const loginRes = await Axios.post(\r\n        constants.backend_url + \"/users/login\",\r\n        loginUser\r\n      );\r\n      setUserData({\r\n        token: loginRes.data.token,\r\n        user: loginRes.data.user,\r\n      });\r\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n      history.push(\"/dashboard\");\r\n    } catch (err) {\r\n      err.response.data.msg && setError(err.response.data.msg);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div\r\n        class=\"  p-3 mb-2  text-white \"\r\n      //   style={{ backgroundImage: `url(${bg2})` }}\r\n      >\r\n        <div\r\n          class=\"container-lg  shadow p-3 mb-5  text-dark  \"\r\n          style={{ marginTop: \"4%\", backgroundColor: \"white\" }}\r\n        >\r\n          <div class=\"row row-cols-2\" style={{ marginTop: \"1%\" }}>\r\n            <div class=\"col  \">\r\n              <img src={Cal} class=\"img-thumbnail\" alt=\"...\"></img>\r\n            </div>\r\n            <div class=\"col \">\r\n              <div\r\n                class=\"container-sm   p-3 mb-5 bg-body rounded bg-light text-dark \"\r\n                style={{ marginTop: \"13%\", height: \"90%\" }}\r\n              >\r\n                <div>\r\n                  <div class=\"mx-auto\">\r\n                    <h2>Login</h2>\r\n                  </div>\r\n                  <p>Please Login to your Acount</p>\r\n                  {error && (\r\n                    <ErrorNotice\r\n                      message={error}\r\n                      clearError={() => setError(undefined)}\r\n                    />\r\n                  )}\r\n                  <div>\r\n                    <form onSubmit={submit}>\r\n                      <div className=\"mb-3\">\r\n                        <label\r\n                          htmlFor=\"exampleInputEmail1\"\r\n                          className=\"form-label\"\r\n                        >\r\n                          Email\r\n                        </label>\r\n                        <input\r\n                          type=\"email\"\r\n                          className=\"form-control\"\r\n                          id=\"login-email\"\r\n                          onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"mb-3\">\r\n                        <label\r\n                          htmlFor=\"exampleInputPassword1\"\r\n                          className=\"form-label\"\r\n                        >\r\n                          Password\r\n                        </label>\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          id=\"login-password\"\r\n                          onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                      </div>\r\n\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-dark ml-150 px-5\"\r\n                        value=\"Log in\"\r\n                      >\r\n                        Sign In\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    // <div className=\"page\">\r\n    //   <h2>Log in</h2>\r\n    //   {error && (\r\n    //     <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n    //   )}\r\n    //   <form className=\"form\" onSubmit={submit}>\r\n    //     <label htmlFor=\"login-email\">Email</label>\r\n    //     <input\r\n    //       id=\"login-email\"\r\n    //       type=\"email\"\r\n    //       onChange={(e) => setEmail(e.target.value)}\r\n    //     />\r\n\r\n    //     <label htmlFor=\"login-password\">Password</label>\r\n    //     <input\r\n    //       id=\"login-password\"\r\n    //       type=\"password\"\r\n    //       onChange={(e) => setPassword(e.target.value)}\r\n    //     />\r\n\r\n    //     <input type=\"submit\" value=\"Log in\" />\r\n    //   </form>\r\n    // </div>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../../css/style.css\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\nimport Cal from \"../../images/cal.png\";\r\nimport constants from \"../../constants/constants\";\r\n\r\nexport default function Register() {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [passwordCheck, setPasswordCheck] = useState();\r\n  const [displayName, setDisplayName] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  const { setUserData } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newUser = { email, password, passwordCheck, displayName };\r\n      await Axios.post(constants.backend_url + \"/users/register\", newUser);\r\n      const loginRes = await Axios.post(constants.backend_url + \"/users/login\", {\r\n        email,\r\n        password,\r\n      });\r\n      setUserData({\r\n        token: loginRes.data.token,\r\n        user: loginRes.data.user,\r\n      });\r\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n      history.push(\"/dashboard\");\r\n    } catch (err) {\r\n      err.response.data.msg && setError(err.response.data.msg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        class=\"  p-3 mb-2  text-white \"\r\n      //   style={{ backgroundImage: `url(${bg2})` }}\r\n      >\r\n        <div\r\n          class=\"container-lg  shadow p-3 mb-5  text-dark  \"\r\n          style={{ marginTop: \"5%\", backgroundColor: \"white\" }}\r\n        >\r\n          <div class=\"row row-cols-2\">\r\n            <div class=\"col\">\r\n              <img src={Cal} class=\"img-thumbnail\" alt=\"...\"></img>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div\r\n                class=\"container-sm   p-3 mb-5 bg-body rounded bg-light text-dark \"\r\n                style={{ marginTop: \"0%\", height: \"97.6%\" }}\r\n              >\r\n                <div style={{ marginTop: \"7%\" }}>\r\n                  <div class=\"mx-auto\">\r\n                    <h2>Sign Up</h2>\r\n                  </div>\r\n                  <p>Please Signup Before login to your Acount</p>\r\n                  {error && (\r\n                    <ErrorNotice\r\n                      message={error}\r\n                      clearError={() => setError(undefined)}\r\n                    />\r\n                  )}\r\n                  <div>\r\n                    <form onSubmit={submit}>\r\n                      <div className=\"mb-2\">\r\n                        <label\r\n                          htmlFor=\"exampleInputEmail1\"\r\n                          className=\"form-label\"\r\n                        >\r\n                          Email\r\n                        </label>\r\n                        <input\r\n                          type=\"email\"\r\n                          className=\"form-control\"\r\n                          id=\"register-email\"\r\n                          aria-describedby=\"emailHelp\"\r\n                          onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"mb-2\">\r\n                        <label className=\"form-label\">User Name</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          id=\"register-display-name\"\r\n                          className=\"form-control\"\r\n                          onChange={(e) => setDisplayName(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"mb-2\">\r\n                        <label\r\n                          htmlFor=\"exampleInputPassword1\"\r\n                          className=\"form-label\"\r\n                        >\r\n                          Password\r\n                        </label>\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          id=\"register-password\"\r\n                          onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"mb-4\">\r\n                        <label\r\n                          htmlFor=\"exampleInputPassword1\"\r\n                          className=\"form-label\"\r\n                        >\r\n                          Verify Password\r\n                        </label>\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          id=\"Verify password\"\r\n                          onChange={(e) => setPasswordCheck(e.target.value)}\r\n                        />\r\n                      </div>\r\n\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-dark ml-150 px-5\"\r\n                        value=\"Register\"\r\n                      >\r\n                        Sign Up\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                  <p></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    //   <div className=\"page\">\r\n    //   <h2>Register</h2>\r\n    //   {error && (\r\n    //     <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n    //   )}\r\n    //   <form className=\"form\" onSubmit={submit}>\r\n    //     <label htmlFor=\"register-email\">Email</label>\r\n    //     <input\r\n    //       id=\"register-email\"\r\n    //       type=\"email\"\r\n    //       onChange={(e) => setEmail(e.target.value)}\r\n    //     />\r\n\r\n    //     <label htmlFor=\"register-password\">Password</label>\r\n    //     <input\r\n    //       id=\"register-password\"\r\n    //       type=\"password\"\r\n    //       onChange={(e) => setPassword(e.target.value)}\r\n    //     />\r\n    //     <input\r\n    //       type=\"password\"\r\n    //       placeholder=\"Verify password\"\r\n    //       onChange={(e) => setPasswordCheck(e.target.value)}\r\n    //     />\r\n\r\n    //     <label htmlFor=\"register-display-name\">Display name</label>\r\n    //     <input\r\n    //       id=\"register-display-name\"\r\n    //       type=\"text\"\r\n    //       onChange={(e) => setDisplayName(e.target.value)}\r\n    //     />\r\n\r\n    //     <input type=\"submit\" value=\"Register\" />\r\n    //   </form>\r\n    // </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, Nav, Button, NavDropdown, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthOptions from \"../auth/AuthOptions\";\r\n\r\n// import AddDoctorButton from \"./AddDoctorButton\";\r\n\r\nexport class navbar extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Container fluid>\r\n          <Link class=\"navbar-brand\" to=\"/\">\r\n            TLD APP\r\n          </Link>\r\n          {/* <Navbar.Brand href=\"#home\">Dashboard</Navbar.Brand> */}\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"me-auto\"></Nav>\r\n            <Nav>\r\n              <Nav.Link eventKey={2}>\r\n                <AuthOptions />\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default navbar;\r\n","import React, { Component } from 'react';\r\n\r\nclass Dashboard extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <div>\r\n                <h3>Dashboard</h3>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nexport default Dashboard;","import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Home</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport Header from \"./components/nav/Header\";\r\n\r\nimport Login from \"./components/auth/Login\";\r\nimport Register from \"./components/auth/Register\";\r\nimport UserContext from \"./context/userContext\";\r\nimport Navbar from \"./components/nav/Navbar\";\r\n\r\nimport constants from \"./constants/constants\"\r\nimport Home from \"./pages/Home\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\n\r\n\r\n\r\nexport default function App() {\r\n  const [userData, setUserData] = useState({\r\n    token: undefined,\r\n    user: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const checkLoggedIn = async () => {\r\n      let token = localStorage.getItem(\"auth-token\");\r\n      if (token === null) {\r\n        localStorage.setItem(\"auth-token\", \"\");\r\n        token = \"\";\r\n      }\r\n\r\n      const tokenRes = await Axios.post(\r\n        constants.backend_url+\"/users/tokenIsValid\",\r\n        null,\r\n        { headers: { \"x-auth-token\": token } }\r\n      );\r\n      console.log(tokenRes.data);\r\n      if (tokenRes.data) {\r\n        const userRes = await Axios.get(constants.backend_url+\"/users/\", {\r\n          headers: { \"x-auth-token\": token },\r\n        });\r\n        setUserData({\r\n          token,\r\n          user: userRes.data,\r\n        });\r\n      }\r\n    };\r\n\r\n    checkLoggedIn();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <UserContext.Provider value={{ userData, setUserData }}>\r\n          <Navbar />\r\n          <div className=\"container\">\r\n            <Switch>\r\n              \r\n              <Route exact path=\"/dashboard\" component={Dashboard} />\r\n              \r\n              <Route path=\"/register\" component={Register} />\r\n              <Route path=\"/\" component={Login} />\r\n        \r\n            </Switch>\r\n          </div>\r\n        </UserContext.Provider>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}